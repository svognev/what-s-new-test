{"version":3,"sources":["services/version-info-service.js","components/title-block/index.js","components/title-block/title-block.js","components/presentation-block/presentation-block.js","components/version-title/index.js","components/version-title/version-title.js","components/feature/index.js","components/feature/feature.js","components/version-info/index.js","components/version-info/version-info.js","components/version/index.js","components/version/version.js","components/versions-block/index.js","components/versions-block/versions-block.js","App.js","serviceWorker.js","index.js"],"names":["VersionInfoService","_base","url","fetch","concat","this","res","ok","Error","status","json","getInfo","versions","TitleBlock","_ref","_ref$lang","lang","titleText","subtitleText","subtitleClass","titleClass","react_default","a","createElement","className","PresentationBlock","number","title","innovation","captionText1","captionText2","buttonText","toUpperCase","VersionTitle","props","eventHandler","date","buttonClassName","opened","releaseText","onClick","Feature","name","icon","description","style","backgroundImage","VersionInfo","features","getFeatures","featuresInfo","numOfFeatures","isMobile","arguments","length","undefined","featuresArray","i","_featuresInfo$i","descriptionShort","descriptionLong","push","components_feature","Object","assign","key","seeAllButtonText","Version","state","_this","openVersionInfo","setState","_this$props$info","info","others","objectWithoutProperties","components_version_title","components_version_info","Component","VersionsBlock","mappedVersions","map","version","idx","components_version","App","infoService","onVersionsLoaded","updateVersions","getAllVersionsEN","then","getAllVersionsDE","_this$state","_this$state$versions$","components_title_block","presentation_block_presentation_block","components_versions_block","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8e31976.chunk.js","sourcesContent":["class VersionInfoService {\r\n    _base = \"https://my-json-server.typicode.com/svognev/what-s-new-fake-server\"\r\n    \r\n    async getInfo(url) {\r\n        const res = await fetch(`${this._base}${url}`);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}. Res status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getAllVersionsEN() {\r\n        const versions = await this.getInfo(\"/en\");\r\n        return versions;\r\n    }\r\n\r\n    async getAllVersionsDE() {\r\n        const versions = await this.getInfo(\"/de\");\r\n        return versions;\r\n    }\r\n\r\n}\r\n\r\nexport default VersionInfoService;","import TitleBlock from \"./title-block\";\r\nexport default TitleBlock;","import React from \"react\";\r\nimport \"./title-block.css\";\r\n\r\nconst TitleBlock = ({ lang = \"en\" }) => {\r\n    const titleText = lang === \"en\" \r\n        ? \"Our latest features\" \r\n        : \"Unsere neuesten Funktionen\";\r\n\r\n    const subtitleText = lang === \"en\"\r\n        ? \"We are always working hard to make SMASHDOCS the best platform for your documentary needs. Check out some of the most important things we've been up to lately...\"\r\n        : \"Wir arbeiten ständig daran, SMASHDOCs zur besten Plattform für Ihre Dokumentationsanforderungen zu machen. Schauen Sie sich einige der wichtigsten Dinge an, die wir in letzter Zeit gemacht haben.\";\r\n\r\n    let subtitleClass = \"TitleBlock-Subheading TitleSubheading\";\r\n    let titleClass = \"TitleBlock-Heading TitleHeading\";\r\n\r\n    if (lang === \"de\") {\r\n      subtitleClass += \" TitleSubheading_de\";\r\n      titleClass += \" TitleBlock-Heading_de TitleHeading_de\";\r\n    }\r\n    \r\n    return (\r\n        <div className=\"TitleBlock\">\r\n            <div className={titleClass}>\r\n                <span className=\"TitleHeading-Text\">\r\n                    {titleText}\r\n                </span>\r\n            </div>\r\n            <div className={subtitleClass}>\r\n                <span className=\"SubtitleHeading-Text\">\r\n                    {subtitleText}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TitleBlock;","import React from \"react\";\r\nimport \"./presentation-block.css\";\r\n\r\nconst PresentationBlock = ({lang, number, title, innovation}) => {\r\n    const captionText1 = lang === \"en\" \r\n        ? \"A new feature of \" \r\n        : \"Neue Funktionen von \";\r\n    \r\n    const captionText2 = lang === \"en\" \r\n        ? \"version \" \r\n        : \"Version \";\r\n\r\n    const buttonText = lang === \"en\" \r\n        ? \"READ MORE\" \r\n        : \"MEHR LESEN\"; \r\n        \r\n    return (\r\n        <div className=\"PresentationBlock\">\r\n        <div className=\"PresentationBlock-TopCaption PresentationCaption\">\r\n          <span className=\"PresentationCaption-Text\">\r\n            {captionText1}<span className=\"PresentationCaption-Text_heavy\">{captionText2}{number}</span></span>\r\n        </div>\r\n        <div className=\"PresentationBlock-Heading PresentationHeading\">\r\n          <span className=\"PresentationHeading-Text\">\r\n            {title.toUpperCase()}\r\n          </span>\r\n        </div>\r\n        <div className=\"PresentationBlock-BottomCaption PresentationCaption PresentationCaption_mobileBottom\">\r\n          <span className=\"PresentationCaption-Text\">\r\n            {innovation}\r\n          </span>\r\n        </div>\r\n        <div className=\"PresentationBlock-Button\">\r\n          <button className=\"PresentationButton\">\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PresentationBlock;","import VersionTitle from \"./version-title\";\r\nexport default VersionTitle;","import React from \"react\";\r\nimport \"./version-title.css\";\r\n\r\nconst VersionTitle = (props) => {\r\n    const { eventHandler, number, date, opened, lang } = props;\r\n    \r\n    let buttonClassName = \"VersionTitle-Button\";\r\n    if (opened) {\r\n        buttonClassName += \" VersionTitle-Button_opened\";\r\n    }\r\n\r\n    const releaseText = lang === \"en\" \r\n        ? \"released on  \" \r\n        : \"\";\r\n    \r\n    return (\r\n        <div className=\"VersionTitle\">\r\n          <button className={buttonClassName} onClick={eventHandler} />\r\n          <span className=\"VersionTitle-Text\">\r\n            Version {number} <span className=\"VersionTitle-Text_releaseDate\"><span className=\"VersionTitle-Text_dash\">- </span>{releaseText}{date}</span>\r\n          </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VersionTitle;","import Feature from \"./feature\";\r\nexport default Feature;","import React from \"react\";\r\nimport \"./feature.css\";\r\n\r\nconst Feature = (props) => {\r\n    const {name, icon, description} = props;\r\n    return (\r\n        <div className=\"Feature\">\r\n            <div className=\"Feature-Icon\" style={{ \"backgroundImage\": `url(${icon})` }}>\r\n            </div>\r\n            <div className=\"Feature-Title\">\r\n                <span className=\"Feature-TitleText\">{name}</span>\r\n            </div>\r\n            <div className=\"Feature-Caption\">\r\n                <span className=\"Feature-CaptionText\">{description}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feature;\r\n\r\n\r\n\r\n","import VersionInfo from \"./version-info\";\r\nexport default VersionInfo;","import React from \"react\";\r\nimport \"./version-info.css\";\r\nimport Feature from \"../feature\";\r\n\r\nconst VersionInfo = ({features, lang}) => {\r\n\r\n  const getFeatures = (featuresInfo, numOfFeatures, isMobile = false) => {\r\n    const featuresArray = [];\r\n\r\n    for (let i = 0; i < featuresInfo.length && i < numOfFeatures; i++) {\r\n      const { name, icon, descriptionShort, descriptionLong } = featuresInfo[i];\r\n      const description = isMobile ? descriptionShort : descriptionLong;\r\n\r\n      featuresArray.push(<Feature {...{name, icon, description}} key={name} />)\r\n    }\r\n    return featuresArray;\r\n  }\r\n\r\n  const seeAllButtonText = lang === \"en\" \r\n      ? \"See all features \" \r\n      : \"Alle Funktionen anzeigen \";\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"VersionInfo\">\r\n            <div className=\"VersionInfo-FeaturesList FeaturesList\">\r\n              { getFeatures(features, 3) }\r\n            </div>\r\n            <div className=\"VersionInfo-SeeAll SeeAllFeatures\">\r\n              <a className=\"SeeAllFeatures-Link\">{seeAllButtonText}<div className=\"SeeAllFeatures-Arrow\"></div></a>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"VersionInfo_mobile\">\r\n          <div className=\"VersionInfo-FeaturesList FeaturesList\">\r\n            { getFeatures(features, 4, true) }\r\n          </div>\r\n          <div className=\"VersionInfo-SeeAll SeeAllFeatures\">\r\n            <a className=\"SeeAllFeatures-Link\">{seeAllButtonText}<div className=\"SeeAllFeatures-Arrow\"></div></a>\r\n          </div>\r\n        </div>\r\n      </div>       \r\n  );\r\n}\r\n\r\nexport default VersionInfo;","import Version from \"./version\";\r\nexport default Version;","import React, { Component } from \"react\";\r\nimport \"./version.css\";\r\nimport VersionTitle from \"../version-title\";\r\nimport VersionInfo from \"../version-info\";\r\n\r\n\r\nclass Version extends Component {\r\n    state = {\r\n        opened: this.props.opened,\r\n    }\r\n\r\n    openVersionInfo = () => {\r\n        this.setState(({ opened }) => {\r\n            return {\r\n                opened: !opened\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { features, ...others } = this.props.info;\r\n        const { lang } = this.props;\r\n\r\n        return (\r\n            <div className=\"Version\">\r\n                <VersionTitle {...others} eventHandler={this.openVersionInfo} opened={this.state.opened} lang={lang} />\r\n                { this.state.opened ? <VersionInfo { ...{features, lang} } /> : null }\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Version;","import VersionsBlock from \"./versions-block\";\r\nexport default VersionsBlock;","import React from \"react\";\r\nimport \"./versions-block.css\";\r\nimport Version from \"../version\";\r\n\r\nconst VersionsBlock = ({versions, lang}) => {\r\n    const mappedVersions = versions.map((version, idx) => {\r\n      return (\r\n          <Version info={version} opened={idx === 0} key={version.number} lang={lang} />\r\n      );\r\n    })\r\n    return (\r\n        <div className=\"VersionsBlock\">\r\n            <div className=\"VersionsBlock-List VersionsList\">\r\n                {mappedVersions}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VersionsBlock;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport VersionInfoService from \"./services/version-info-service\";\nimport TitleBlock from \"./components/title-block\";\nimport PresentationBlock from \"./components/presentation-block/presentation-block\";\nimport VersionsBlock from \"./components/versions-block\";\n\nclass App extends Component {\n  infoService = new VersionInfoService();\n  \n  state = {\n    lang: this.props.lang,\n    versions: null,\n  }\n\n  componentDidMount() {\n    this.updateVersions();\n  }\n\n  onVersionsLoaded = versions => {\n    this.setState({ versions });\n  }\n\n  updateVersions = () => {\n    if (this.state.lang === \"en\") {\n      this.infoService.getAllVersionsEN().then(versions => {\n        this.onVersionsLoaded(versions);\n      });\n    } else if (this.state.lang === \"de\") {\n      this.infoService.getAllVersionsDE().then(versions => {\n        this.onVersionsLoaded(versions);\n      });\n    }\n  }\n  \n\n  render() {\n    const { lang, versions } = this.state;\n    if (this.state.versions) {\n      const { number, title, innovation } = this.state.versions[0];\n      return (\n        <div className=\"App\">\n          <TitleBlock { ...{lang} } />\n          <PresentationBlock { ...{lang, number, title, innovation} }/>\n          <VersionsBlock { ...{lang, versions} } />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <TitleBlock { ...{lang} }/>\n        </div>\n      );\n    }\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App lang=\"en\" />, document.getElementById('root_en'));\nReactDOM.render(<App lang=\"de\" />, document.getElementById('root_de'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}