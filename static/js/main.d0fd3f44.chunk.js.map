{"version":3,"sources":["services/version-info-service.js","components/title-block/index.js","components/title-block/title-block.js","components/presentation-block/presentation-block.js","helpers.js","components/version-title/index.js","components/version-title/version-title.js","components/feature/index.js","components/feature/feature.js","components/version-info/index.js","components/version-info/version-info.js","components/version/index.js","components/version/version.js","components/versions-block/index.js","components/versions-block/versions-block.js","components/version-heading-block/index.js","components/version-heading-block/version-heading-block.js","components/feature-details/index.js","components/feature-details/feature-details.js","components/feature-details-list/index.js","components/feature-details-list/feature-details-list.js","components/subscription-block/index.js","components/subscription-block/subscription-block.js","components/version-page/index.js","components/version-page/version-page.js","App.js","serviceWorker.js","index.js"],"names":["VersionInfoService","_base","url","noCors","fetch","res","ok","Error","concat","status","json","lang","this","getInfo","versions","document","getElementsByClassName","style","display","num","replace","versionDetails","TitleBlock","_ref","_ref$lang","titleText","subtitleText","subtitleClass","titleClass","react_default","a","createElement","className","withRouter","number","title","innovation","history","captionText1","captionText2","buttonText","toUpperCase","length","stringToBreak","maxLength","stringsNum","stringsArr","split","newStringsArr","Array","fill","i","j","slice","join","breakIntoLines","map","str","console","log","onClick","push","VersionTitle","props","eventHandler","date","buttonClassName","opened","releaseText","Feature","name","icon","description","backgroundImage","VersionInfo","features","getFeatures","featuresInfo","numOfFeatures","isMobile","arguments","undefined","featuresArray","_featuresInfo$i","descriptionShort","descriptionLong","components_feature","Object","assign","key","seeAllButtonText","Version","state","_this","openVersionInfo","setState","_this$props$info","info","others","objectWithoutProperties","components_version_title","objectSpread","components_version_info","Component","VersionsBlock","mappedVersions","version","idx","components_version","VersionHeadingBlock","versionNumber","headingText","patchNumber","FeatureDetails","text","image","reverse","first","preparedText","item","FeatureDetailsClass","src","alt","FeatureDetailsList","featureDetailsArray","feature","components_feature_details","SubcriptionBlock","salutations","salutation","surname","email","changeInput","event","inputName","defineProperty","target","value","previousValue","isForward","indexOf","subheadingText","salutationTitle","nameTitle","surnameTitle","emailTitle","privacyCaptionText","privacyCaptionLinkText","_this2","subheadingClass","headingClass","privacyCaptionClass","onChange","e","onFocus","onBlur","switchSalutationInput","VersionPage","infoService","onVersionDataLoaded","versionData","updateVersionData","_this$props","getVersionDetails","then","_this$props2","components_version_heading_block","components_feature_details_list","components_subscription_block","App","currentVersion","onVersionsLoaded","updateVersions","getAllVersions","_this$state","_versions$","_window","window","changeLang","scrollTo","react_router_dom","react_router","path","exact","render","components_title_block","presentation_block_presentation_block","components_versions_block","_ref2","match","id","params","some","isValidId","linksArray","href","includes","PUBLIC_URL","replaceLangLinks","components_version_page","Boolean","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2iBAyBeA,mDAxBXC,MAAQ,2IAEMC,EAAKC,6EACHA,kCAAeC,MAAMF,EAAK,oEAAmBE,MAAMF,iCAAzDG,QACGC,0BACC,IAAIC,MAAJ,mBAAAC,OAA6BN,EAA7B,kBAAAM,OAAiDH,EAAII,kCAElDJ,EAAIK,gOAGAC,yFACMC,KAAKC,QAAL,GAAAL,OAAgBI,KAAKX,OAArBO,OAA6BG,EAA7B,iCAAjBG,SACNC,SAASC,uBAAT,UAAAR,OAA0CG,IAAQ,GAAGM,MAAMC,QAAU,0BAC9DJ,wLAGaH,EAAMQ,yFACGP,KAAKC,QAAL,GAAAL,OAAgBI,KAAKX,OAArBO,OAA6BG,EAA7B,KAAAH,OAAqCW,EAAIC,QAAQ,IAAK,KAAtD,4BAAvBC,SACNN,SAASC,uBAAT,UAAAR,OAA0CG,IAAQ,GAAGM,MAAMC,QAAU,0BAC9DG,iHCnBAC,SCEI,SAAAC,GAAqB,IAAAC,EAAAD,EAAlBZ,YAAkB,IAAAa,EAAX,KAAWA,EAC9BC,EAAqB,OAATd,EACZ,sBACA,6BAEAe,EAAwB,OAATf,EACf,oKACA,4MAEFgB,EAAgB,wCAChBC,EAAa,kCAOjB,MALa,OAATjB,IACFgB,GAAiB,sBACjBC,GAAc,0CAIZC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,GACZC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACXP,IAGTI,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,GACZE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBACXN,OCsBNO,qBA7CW,SAAAV,GAAgD,IAA9CZ,EAA8CY,EAA9CZ,KAAMuB,EAAwCX,EAAxCW,OAAQC,EAAgCZ,EAAhCY,MAAOC,EAAyBb,EAAzBa,WAAYC,EAAad,EAAbc,QACnDC,EAAwB,OAAT3B,EACf,oBACA,uBAEA4B,EAAwB,OAAT5B,EACf,WACA,WAEA6B,EAAsB,OAAT7B,EACb,YACA,aAEFc,EAAYI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAA4BG,EAAMM,eAS/D,OAPIN,EAAMO,OAAS,KACjBjB,ECLwB,SAACkB,EAAeC,EAAWC,GAGvD,IAFA,IAAMC,EAAaH,EAAcI,MAAM,KACnCC,EAAgBC,MAAMJ,GAAYK,KAAK,IAClCC,EAAI,EAAGC,EAAI,EAAGD,EAAIL,EAAWJ,OAAQS,IAC5C,GAAIH,EAAcI,GAAGV,OAASI,EAAWK,GAAGT,OAAS,GAAKE,EACxDI,EAAcI,IAAd,IAAA5C,OAAwBsC,EAAWK,QAC9B,CACL,KAAIC,EAAIP,EAAa,GAGd,CACLG,EAAcI,IAAd,IAAA5C,OAAwBsC,EAAWO,MAAMF,GAAGG,KAAK,MACjD,MAHAN,IADAI,IACoBN,EAAWK,GAOrC,OAAOH,EDXSO,CAAepB,EAAO,GAAI,GAAGqB,IAAI,SAAAC,GAC3C,OAAQ5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+DAA+DyB,EAAIhB,iBAE1FiB,QAAQC,IAAIlC,IAIVI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACbM,EAAaT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAkCO,EAAcL,KAElFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACZP,GAEHI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wFACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACbI,IAGLP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAqB4B,QAAS,WAAQvB,EAAQwB,KAAR,GAAArD,OAAgBG,EAAhB,KAAAH,OAAwB0B,EAAOd,QAAQ,IAAK,SACjGoB,gCE3CAsB,eCEM,SAACC,GAAU,IACpBC,EAA6CD,EAA7CC,aAAc9B,EAA+B6B,EAA/B7B,OAAQ+B,EAAuBF,EAAvBE,KAE1BC,EAAkB,sBAF+BH,EAAjBI,SAIhCD,GAAmB,+BAGvB,IAAME,EAAuB,OAPwBL,EAATpD,KAQtC,gBACA,GAEN,OACIkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAWkC,EAAiBN,QAASI,IAC7CnC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAqB4B,QAASI,GAA9C,WACW9B,EADX,IACmBL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAgCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,MAAmDoC,EAAaH,OClB9HI,eCEC,SAACN,GAAU,IAChBO,EAA2BP,EAA3BO,KAAMC,EAAqBR,EAArBQ,KAAMC,EAAeT,EAAfS,YACnB,OACI3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAef,MAAO,CAAEwD,gBAAA,OAAAjE,OAA0B+D,EAA1B,QAEvC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBsC,IAEzCzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBwC,OCZxCE,EC6CAzC,YAzCK,SAAAV,GAAuC,IAArCoD,EAAqCpD,EAArCoD,SAAUhE,EAA2BY,EAA3BZ,KAAMuB,EAAqBX,EAArBW,OAAQG,EAAad,EAAbc,QAEtCuC,EAAc,SAACC,EAAcC,GAGjC,IAHqE,IAArBC,EAAqBC,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,IAAAA,UAAA,GAC/DE,EAAgB,GAEb/B,EAAI,EAAGA,EAAI0B,EAAanC,QAAUS,EAAI2B,EAAe3B,IAAK,KAAAgC,EACPN,EAAa1B,GAA/DmB,EADyDa,EACzDb,KAAMC,EADmDY,EACnDZ,KAAMa,EAD6CD,EAC7CC,iBAAkBC,EAD2BF,EAC3BE,gBAChCb,EAAcO,EAAWK,EAAmBC,EAElDH,EAAcrB,KAAKhC,EAAAC,EAAAC,cAACuD,EAADC,OAAAC,OAAa,CAAClB,OAAMC,OAAMC,eAA1B,CAAwCiB,IAAKnB,MAElE,OAAOY,GAGHQ,EAA4B,OAAT/E,EACnB,oBACA,4BAEN,OACIkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACX4C,EAAYD,EAAU,IAE1B9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsB4B,QAAS,WAAQvB,EAAQwB,KAAR,GAAArD,OAAgBG,EAAhB,KAAAH,OAAwB0B,EAAOd,QAAQ,IAAK,SAAasE,EAAiB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAIxJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACX4C,EAAYD,EAAU,GAAG,IAE7B9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsB4B,QAAS,WAAQvB,EAAQwB,KAAR,GAAArD,OAAgBG,EAAhB,KAAAH,OAAwB0B,EAAOd,QAAQ,IAAK,SAAasE,EAAiB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BCtC/I2D,6MCMXC,MAAQ,CACJzB,OAAQ0B,EAAK9B,MAAMI,UAGvB2B,gBAAkB,WACdD,EAAKE,SAAS,SAAAxE,GACV,MAAO,CACH4C,QAFsB5C,EAAb4C,mFAOZ,IAAA6B,EACmCpF,KAAKmD,MAAMkC,KAA3CtB,EADHqB,EACGrB,SAAUzC,EADb8D,EACa9D,OAAWgE,EADxBX,OAAAY,EAAA,EAAAZ,CAAAS,EAAA,uBAEGrF,EAASC,KAAKmD,MAAdpD,KACAwD,EAAWvD,KAAKgF,MAAhBzB,OAER,OACItC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACqE,EAADb,OAAAC,OAAA,GAAAD,OAAAc,EAAA,EAAAd,CAAA,GAAsBW,EAAtB,CAA8BhE,SAAQvB,OAAMwD,WAA5C,CAAqDH,aAAcpD,KAAKkF,mBACtElF,KAAKgF,MAAMzB,OAAStC,EAAAC,EAAAC,cAACuE,EAAgB,CAAC3B,WAAUzC,SAAQvB,SAAY,aArBhE4F,aCLPC,ECGO,SAAAjF,GAAwB,IAArBT,EAAqBS,EAArBT,SAAUH,EAAWY,EAAXZ,KACzB8F,EAAiB3F,EAAS0C,IAAI,SAACkD,EAASC,GAC5C,OACI9E,EAAAC,EAAAC,cAAC6E,EAADrB,OAAAC,OAAA,CAASS,KAAMS,EAASvC,OAAgB,IAARwC,EAAWlB,IAAKiB,EAAQxE,QAAa,CAACvB,YAG5E,OACIkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACVyE,KCZFI,SCEa,SAAAtF,GAA2B,IAAzBZ,EAAyBY,EAAzBZ,KAAMmG,EAAmBvF,EAAnBuF,cAC1BC,EAAuB,OAATpG,EAAgB,UAAY,UAC1CqG,EAAgC,SAAlBF,EAA2B,KAAO,KAEtD,OADApD,QAAQC,IAAIqD,GAERnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mDACX8E,EAAgBE,GAErBnF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kDACX+E,EAAaD,EAAgBE,OCbnCC,SCEQ,SAAClD,GAAU,IACxB5B,EAA6C4B,EAA7C5B,MAAaoC,GAAgCR,EAAtCmD,KAAsCnD,EAAhCQ,MAAM4C,EAA0BpD,EAA1BoD,MAAOC,EAAmBrD,EAAnBqD,QAASC,EAAUtD,EAAVsD,MAEzC,IAAMC,EADC,mpBACmBvE,MAAM,MAAMS,IAAI,SAAC+D,EAAM9B,GAC7C,MAAgB,MAAZ8B,EAAK,IAAwC,MAA1BA,EAAKA,EAAK7E,OAAS,GAEtCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWyD,IAAKA,GAC3B5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB,UAC9BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBuF,EAAKlE,MAAM,EAAGkE,EAAK7E,OAAS,KAI3Db,EAAAC,EAAAC,cAAA,QAAM0D,IAAKA,GAAM8B,EAAK1F,EAAAC,EAAAC,cAAA,cAG7ByF,EAAsB,iBAQ1B,OAPIJ,IACAI,GAAuB,2BAEvBH,IACAG,GAAuB,yBAIvB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAWwF,GACZ3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Bf,MAAO,CAAEwD,gBAAe,OAAAjE,OAAU+D,EAAV,QAEjE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCACXG,KAIbN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACXsF,MAKjBzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEAAiEyF,IAAKN,EAAOO,IAAI,UC/CrGC,SCGY,SAAApG,GAAgB,IACjCqG,EADiCrG,EAAdoD,SACYnB,IAAI,SAACqE,EAASlB,GAC/C,OACI9E,EAAAC,EAAAC,cAAC+F,EAADvC,OAAAC,OAAA,GAAoBqC,EAApB,CAA6BpC,IAAKoC,EAAQ1F,MAAQwE,EAAKS,QAAST,EAAM,EAAGU,MAAe,IAARV,OAGxF,OACI9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACV4F,aCXEG,oNCIXC,YAAkC,OAApBnC,EAAK9B,MAAMpD,KAAgB,CAAC,MAAO,OAAQ,OAAQ,OAAS,CAAC,OAAQ,UAEnFiF,MAAQ,CACJqC,WAAYpC,EAAKmC,YAAY,GAC7B1D,KAAM,GACN4D,QAAS,GACTC,MAAO,MAGXC,YAAc,SAACC,EAAOC,GAClBzC,EAAKE,SAALR,OAAAgD,EAAA,EAAAhD,CAAA,GAAiB+C,EAAYD,EAAMG,OAAOC,8FAGxBC,GAAiC,IAAlBC,IAAkB3D,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,KAAAA,UAAA,GAC3CgD,EAAgBpH,KAAhBoH,YACFrB,EAAMqB,EAAYY,QAAQF,IACnB,IAAT/B,EACA/F,KAAKmF,SAAS,CAAEkC,WAAYD,EAAY,KAEpCW,EACIhC,EAAM,EAAIqB,EAAYtF,OACtB9B,KAAKmF,SAAS,CAAEkC,WAAYD,EAAYrB,EAAM,KAE9C/F,KAAKmF,SAAS,CAAEkC,WAAYD,EAAY,KAGxCrB,EAAM,GAAK,EACX/F,KAAKmF,SAAS,CAAEkC,WAAYD,EAAYrB,EAAM,KAE9C/F,KAAKmF,SAAS,CAAEkC,WAAYD,EAAYA,EAAYtF,OAAS,sCAMpE,IAYDqE,EAAa8B,EAAgBC,EAAiBC,EAAWC,EAAcC,EAAYC,EAAoBC,EAAwB3G,EAZ9H4G,EAAAxI,KACGD,EAASC,KAAKmD,MAAdpD,KACJ0I,EAAkB,8BAClBC,EAAe,2BACfC,EAAsB,kCAgC1B,MA9Ba,OAAT5I,IACA0I,GAAmB,kCACnBC,GAAgB,+BAChBC,GAAuB,uCAKd,OAAT5I,GACAoG,EAAc,yBACd8B,EAAiB,yFACjBC,EAAkB,aAClBC,EAAY,OACZC,EAAe,UACfC,EAAa,iBACbC,EAAqB,8BACrBC,EAAyB,iBACzB3G,EAAa,cAEbuE,EAAc,2BACd8B,EAAiB,4GACjBC,EAAkB,SAClBC,EAAY,UACZC,EAAe,WACfC,EAAa,iBACbC,EAAqB,mCACrBC,EAAyB,0BACzB3G,EAAa,cAIbX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWsH,GACZzH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCACX+E,IAGTlF,EAAAC,EAAAC,cAAA,OAAKC,UAAWqH,GACZxH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCACX6G,IAGThH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACX8G,EADL,IACsBjH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAhB,OAG1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,+BACVyG,MAAO7H,KAAKgF,MAAMqC,WAClBuB,SAAU,SAACC,GAAD,OAAOL,EAAKhB,YAAYqB,EAAG,eACrCC,QAAS,SAACD,IAA0D,IAA9CL,EAAKpB,YAAYY,QAAQa,EAAEjB,OAAOC,SAAiBgB,EAAEjB,OAAOC,MAAM,KACxFkB,OAAQ,SAACF,GAA+B,KAAnBA,EAAEjB,OAAOC,QAAgBgB,EAAEjB,OAAOC,MAAQW,EAAKxD,MAAMqC,eAG9EpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,qDACV4B,QAAS,kBAAMwF,EAAKQ,sBAAsBR,EAAKxD,MAAMqC,YAAY,MAGrEpG,EAAAC,EAAAC,cAAA,OACIC,UAAU,uDACV4B,QAAS,kBAAMwF,EAAKQ,sBAAsBR,EAAKxD,MAAMqC,kBAMrEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACX+G,EADL,IACgBlH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAhB,OAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,+BACVyG,MAAO7H,KAAKgF,MAAMtB,KAClBkF,SAAU,SAACC,GAAD,OAAOL,EAAKhB,YAAYqB,EAAG,aAKjD5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACXgH,EADL,IACmBnH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAhB,OAGvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,+BACVyG,MAAO7H,KAAKgF,MAAMsC,QAClBsB,SAAU,SAACC,GAAD,OAAOL,EAAKhB,YAAYqB,EAAG,iBAOrD5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACXiH,EADL,IACiBpH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAhB,OAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,+BACVyG,MAAO7H,KAAKgF,MAAMuC,MAClBqB,SAAU,SAACC,GAAD,OAAOL,EAAKhB,YAAYqB,EAAG,cAKjD5H,EAAAC,EAAAC,cAAA,OAAKC,UAAWuH,GACZ1H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCACXkH,EAAmBrH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4CAA4CmH,MAK5FtH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BACbQ,YA5KM+D,cCFhBsD,oNCOXC,YAAc,IAAI9J,IAElB4F,MAAQ,CACJjB,SAAU,QAGdmF,YAAc,IAAI9J,IAYlB+J,oBAAsB,SAAAC,GACpBnE,EAAKE,SAAS,CAAEpB,SAAUqF,OAG5BC,kBAAoB,WAAM,IAAAC,EACQrE,EAAK9B,MAA7BpD,EADgBuJ,EAChBvJ,KAAMmG,EADUoD,EACVpD,cACdjB,EAAKiE,YAAYK,kBAAkBxJ,EAAMmG,GAAesD,KAAK,SAAAJ,GAC3DnE,EAAKkE,oBAAoBC,yFAhB3BpJ,KAAKqJ,kEAG+B1I,EAAjBuF,gBACGlG,KAAKmD,MAAM+C,eAC/BlG,KAAKqJ,qDAeA,IAAAI,EAC2BzJ,KAAKmD,MAA7BpD,EADH0J,EACG1J,KAAMmG,EADTuD,EACSvD,cACNnC,EAAa/D,KAAKgF,MAAlBjB,SAER,OAAIA,EAEI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACuI,EAAyB,CAAC3J,OAAMmG,kBACjCjF,EAAAC,EAAAC,cAACwI,EAAwB,CAAC5F,aAC1B9C,EAAAC,EAAAC,cAACyI,EAAuB,CAAC7J,UAKjCkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBA5CDuE,cCuGXkE,6MAnGbX,YAAc,IAAI9J,IAElB4F,MAAQ,CACNjF,KAAMkF,EAAK9B,MAAMpD,KACjBG,SAAU,KACV4J,eAAgB,QAOlBC,iBAAmB,SAAA7J,GACjB+E,EAAKE,SAAS,CAAEjF,gBAGlB8J,eAAiB,WACf/E,EAAKiE,YAAYe,eAAehF,EAAKD,MAAMjF,MAAMyJ,KAAK,SAAAtJ,GACpD+E,EAAK8E,iBAAiB7J,yFATxBF,KAAKgK,kDAaE,IAAAE,EACoBlK,KAAKgF,MAAxBjF,EADDmK,EACCnK,KAAMG,EADPgK,EACOhK,SACd,GAAIA,EAAU,KAAAiK,EAC0BjK,EAAS,GAAvCoB,EADI6I,EACJ7I,OAAQC,EADJ4I,EACI5I,MAAOC,EADX2I,EACW3I,WADX4I,EAEqBC,OAAzBC,EAFIF,EAEJE,WAAYC,EAFRH,EAEQG,SAEpB,OACEtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACEvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EACnBC,OAAQ,SAAAjK,GAIJ,OAJmBA,EAAbc,QACAwB,KAAR,OACAsH,EAAS,EAAG,GAGRtJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAgB,CAAC9K,SAClBkB,EAAAC,EAAAC,cAAC2J,EAAuB,CAAC/K,OAAMuB,SAAQC,QAAOC,eAC9CP,EAAAC,EAAAC,cAAC4J,EAAmB,CAAChL,OAAMG,iBAKrCe,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAI,IAAA9K,OAAMG,GAAQ4K,OAAK,EAC5BC,OAAQ,WAIL,OAHAN,EAAWvK,GACXwK,EAAS,EAAG,GAGVtJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAgB,CAAC9K,SAClBkB,EAAAC,EAAAC,cAAC2J,EAAuB,CAAC/K,OAAMuB,SAAQC,QAAOC,eAC9CP,EAAAC,EAAAC,cAAC4J,EAAmB,CAAChL,OAAMG,iBAKpCe,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAI,IAAA9K,OAAMG,EAAN,QACT6K,OAAQ,SAAAI,GAAsB,IAApBC,EAAoBD,EAApBC,MAAOxJ,EAAauJ,EAAbvJ,QAChB6I,EAAWvK,GADkB,IAErBmL,EAAOD,EAAME,OAAbD,GAGR,OAFAX,EAAS,EAAG,GrB1EF,SAACrK,EAAUgL,GAClC,OAAOhL,EAASkL,KAAK,SAAAzK,GACnB,OADiCA,EAAZW,OACPd,QAAQ,IAAK,OAAS0K,IqB0ErBG,CAAUnL,EAAUgL,IrBtEP,SAACA,GAE/B,IADA,IAAMI,EAAanL,SAASC,uBAAT,kBACVmC,EAAI,EAAGA,EAAI+I,EAAWxJ,OAAQS,IACjC+I,EAAW/I,GAAGgJ,KAAKC,SAAS,OAC9BF,EAAW/I,GAAGgJ,KAAd,GAAA3L,OAAwByK,OAAOoB,WAA/B,UAAA7L,OAAkDsL,GAElDI,EAAW/I,GAAGgJ,KAAd,GAAA3L,OAAwByK,OAAOoB,WAA/B,UAAA7L,OAAkDsL,GqBiEvCQ,CAAiBR,GAGfjK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,EAADhH,OAAAC,OAAkB,CAAC7E,QAAnB,CAA2BmG,cAAa,GAAAtG,OAAKsL,EAAG1K,QAAQ,IAAK,YAKjEiB,EAAQwB,KAAR,IAAArD,OAAiBG,IAGfkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAgB,CAAC9K,SAClBkB,EAAAC,EAAAC,cAAC2J,EAAuB,CAAC/K,OAAMuB,SAAQC,QAAOC,eAC9CP,EAAAC,EAAAC,cAAC4J,EAAmB,CAAChL,OAAMG,oBAW5C,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eA9FHuE,aCEEiG,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASb,MACvB,2DCZNc,IAASnB,OAAO3J,EAAAC,EAAAC,cAAC6K,EAAD,CAAKjM,KAAK,OAASI,SAAS8L,eAAe,YAC3DF,IAASnB,OAAO3J,EAAAC,EAAAC,cAAC6K,EAAD,CAAKjM,KAAK,OAASI,SAAS8L,eAAe,YD0HrD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,KAAK,SAAA6C,GACjCA,EAAaC","file":"static/js/main.d0fd3f44.chunk.js","sourcesContent":["class VersionInfoService {\r\n    _base = \"https://my-json-server.typicode.com/svognev/\";\r\n    \r\n    async getInfo(url, noCors) {\r\n        const res = noCors ? await fetch(url, \"no-cors\") : await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}. Res status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getAllVersions(lang) {\r\n        const versions = await this.getInfo(`${this._base}${lang}-main/versions`);\r\n        document.getElementsByClassName(`footer_${lang}`)[0].style.display = \"block\";\r\n        return versions;\r\n    }\r\n\r\n    async getVersionDetails(lang, num) {\r\n        const versionDetails = await this.getInfo(`${this._base}${lang}-${num.replace(\".\", \"-\")}/features`);\r\n        document.getElementsByClassName(`footer_${lang}`)[0].style.display = \"block\";\r\n        return versionDetails;\r\n    }\r\n\r\n}\r\n\r\nexport default VersionInfoService;","import TitleBlock from \"./title-block\";\r\nexport default TitleBlock;","import React from \"react\";\r\nimport \"./title-block.css\";\r\n\r\nconst TitleBlock = ({ lang = \"en\" }) => {\r\n    const titleText = lang === \"en\" \r\n        ? \"Our latest features\" \r\n        : \"Unsere neuesten Funktionen\";\r\n\r\n    const subtitleText = lang === \"en\"\r\n        ? \"We are always working hard to make SMASHDOCS the best platform for your documentary needs. Check out some of the most important things we've been up to lately...\"\r\n        : \"Wir arbeiten ständig daran, SMASHDOCs zur besten Plattform für Ihre Dokumentationsanforderungen zu machen. Schauen Sie sich einige der wichtigsten Dinge an, die wir in letzter Zeit gemacht haben.\";\r\n\r\n    let subtitleClass = \"TitleBlock-Subheading TitleSubheading\";\r\n    let titleClass = \"TitleBlock-Heading TitleHeading\";\r\n\r\n    if (lang === \"de\") {\r\n      subtitleClass += \" TitleSubheading_de\";\r\n      titleClass += \" TitleBlock-Heading_de TitleHeading_de\";\r\n    }\r\n    \r\n    return (\r\n        <div className=\"TitleBlock\">\r\n            <div className={titleClass}>\r\n                <span className=\"TitleHeading-Text\">\r\n                    {titleText}\r\n                </span>\r\n            </div>\r\n            <div className={subtitleClass}>\r\n                <span className=\"SubtitleHeading-Text\">\r\n                    {subtitleText}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TitleBlock;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./presentation-block.css\";\r\n\r\nimport { breakIntoLines } from \"../../helpers\";\r\n\r\nconst PresentationBlock = ({lang, number, title, innovation, history}) => {\r\n    const captionText1 = lang === \"en\" \r\n        ? \"A new feature of \" \r\n        : \"Neue Funktionen von \";\r\n    \r\n    const captionText2 = lang === \"en\" \r\n        ? \"version \" \r\n        : \"Version \";\r\n\r\n    const buttonText = lang === \"en\" \r\n        ? \"READ MORE\" \r\n        : \"MEHR LESEN\"; \r\n\r\n    let titleText = <p className=\"PresentationHeading-Text\">{title.toUpperCase()}</p>;\r\n\r\n    if (title.length > 18) {\r\n      titleText = breakIntoLines(title, 17, 2).map(str => {\r\n        return (<p className=\"PresentationHeading-Text PresentationHeading-Text_multiline\">{str.toUpperCase()}</p>)\r\n      })\r\n      console.log(titleText);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"PresentationBlock\">\r\n        <div className=\"PresentationBlock-TopCaption PresentationCaption\">\r\n          <span className=\"PresentationCaption-Text\">\r\n            {captionText1}<span className=\"PresentationCaption-Text_heavy\">{captionText2}{number}</span></span>\r\n        </div>\r\n        <div className=\"PresentationHeading-Text PresentationBlock-Heading PresentationHeading\">\r\n          {titleText}\r\n        </div>\r\n        <div className=\"PresentationBlock-BottomCaption PresentationCaption PresentationCaption_mobileBottom\">\r\n          <span className=\"PresentationCaption-Text\">\r\n            {innovation}\r\n          </span>\r\n        </div>\r\n        <div className=\"PresentationBlock-Button\">\r\n            <button className=\"PresentationButton\" onClick={() => { history.push(`${lang}/${number.replace(\".\", \"-\")}`) }}>\r\n              {buttonText}\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(PresentationBlock);","export const isValidId = (versions, id) => {\r\n  return versions.some(({number}) => {\r\n    return number.replace(\".\", \"-\") === id;\r\n  })\r\n}\r\n\r\nexport const replaceLangLinks = (id) => {\r\n  const linksArray = document.getElementsByClassName(`changeLangLink`);\r\n  for (let i = 0; i < linksArray.length; i++) {\r\n    if (linksArray[i].href.includes(\"/de\")) {\r\n      linksArray[i].href = `${window.PUBLIC_URL}/#/de/${id}`;\r\n    } else {\r\n      linksArray[i].href = `${window.PUBLIC_URL}/#/en/${id}`;\r\n    }\r\n  }\r\n}\r\n\r\nexport const breakIntoLines = (stringToBreak, maxLength, stringsNum) => {\r\n  const stringsArr = stringToBreak.split(\" \");\r\n  let newStringsArr = Array(stringsNum).fill(\"\");\r\n  for (let i = 0, j = 0; i < stringsArr.length; i++) {\r\n    if (newStringsArr[j].length + stringsArr[i].length + 1 <= maxLength) {\r\n      newStringsArr[j] += ` ${stringsArr[i]}`\r\n    } else {\r\n      if (j < stringsNum - 1) {\r\n        j++;\r\n        newStringsArr[j] += stringsArr[i];\r\n      } else {\r\n        newStringsArr[j] += ` ${stringsArr.slice(i).join(\" \")}`;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return newStringsArr;\r\n}","import VersionTitle from \"./version-title\";\r\nexport default VersionTitle;","import React from \"react\";\r\nimport \"./version-title.css\";\r\n\r\nconst VersionTitle = (props) => {\r\n    const { eventHandler, number, date, opened, lang } = props;\r\n    \r\n    let buttonClassName = \"VersionTitle-Button\";\r\n    if (opened) {\r\n        buttonClassName += \" VersionTitle-Button_opened\";\r\n    }\r\n\r\n    const releaseText = lang === \"en\" \r\n        ? \"released on  \" \r\n        : \"\";\r\n    \r\n    return (\r\n        <div className=\"VersionTitle\">\r\n          <button className={buttonClassName} onClick={eventHandler} />\r\n          <span className=\"VersionTitle-Text\"  onClick={eventHandler}>\r\n            Version {number} <span className=\"VersionTitle-Text_releaseDate\"><span className=\"VersionTitle-Text_dash\">- </span>{releaseText}{date}</span>\r\n          </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VersionTitle;","import Feature from \"./feature\";\r\nexport default Feature;","import React from \"react\";\r\nimport \"./feature.css\";\r\n\r\nconst Feature = (props) => {\r\n    const {name, icon, description} = props;\r\n    return (\r\n        <div className=\"Feature\">\r\n            <div className=\"Feature-Icon\" style={{ \"backgroundImage\": `url(${icon})` }}>\r\n            </div>\r\n            <div className=\"Feature-Title\">\r\n                <span className=\"Feature-TitleText\">{name}</span>\r\n            </div>\r\n            <div className=\"Feature-Caption\">\r\n                <span className=\"Feature-CaptionText\">{description}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feature;\r\n\r\n\r\n\r\n","import VersionInfo from \"./version-info\";\r\nexport default VersionInfo;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./version-info.css\";\r\nimport Feature from \"../feature\";\r\n\r\nconst VersionInfo = ({features, lang, number, history}) => {\r\n\r\n  const getFeatures = (featuresInfo, numOfFeatures, isMobile = false) => {\r\n    const featuresArray = [];\r\n\r\n    for (let i = 0; i < featuresInfo.length && i < numOfFeatures; i++) {\r\n      const { name, icon, descriptionShort, descriptionLong } = featuresInfo[i];\r\n      const description = isMobile ? descriptionShort : descriptionLong;\r\n\r\n      featuresArray.push(<Feature {...{name, icon, description}} key={name} />)\r\n    }\r\n    return featuresArray;\r\n  }\r\n\r\n  const seeAllButtonText = lang === \"en\" \r\n      ? \"See all features \" \r\n      : \"Alle Funktionen anzeigen \";\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"VersionInfo\">\r\n            <div className=\"VersionInfo-FeaturesList FeaturesList\">\r\n              { getFeatures(features, 3) }\r\n            </div>\r\n            <div className=\"VersionInfo-SeeAll SeeAllFeatures\">\r\n              <button className=\"SeeAllFeatures-Link\" onClick={() => { history.push(`${lang}/${number.replace(\".\", \"-\")}`) }} >{seeAllButtonText}<div className=\"SeeAllFeatures-Arrow\"></div></button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"VersionInfo_mobile\">\r\n          <div className=\"VersionInfo-FeaturesList FeaturesList\">\r\n            { getFeatures(features, 4, true) }\r\n          </div>\r\n          <div className=\"VersionInfo-SeeAll SeeAllFeatures\">\r\n            <button className=\"SeeAllFeatures-Link\" onClick={() => { history.push(`${lang}/${number.replace(\".\", \"-\")}`) }} >{seeAllButtonText}<div className=\"SeeAllFeatures-Arrow\"></div></button>\r\n          </div>\r\n        </div>\r\n      </div>       \r\n  );\r\n}\r\n\r\nexport default withRouter(VersionInfo);","import Version from \"./version\";\r\nexport default Version;","import React, { Component } from \"react\";\r\nimport \"./version.css\";\r\nimport VersionTitle from \"../version-title\";\r\nimport VersionInfo from \"../version-info\";\r\n\r\n\r\nclass Version extends Component {\r\n    state = {\r\n        opened: this.props.opened,\r\n    }\r\n\r\n    openVersionInfo = () => {\r\n        this.setState(({ opened }) => {\r\n            return {\r\n                opened: !opened\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { features, number, ...others } = this.props.info;\r\n        const { lang } = this.props;\r\n        const { opened } = this.state;\r\n\r\n        return (\r\n            <div className=\"Version\">\r\n                <VersionTitle {...{...others, number, lang, opened}} eventHandler={this.openVersionInfo} />\r\n                { this.state.opened ? <VersionInfo {...{features, number, lang}} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Version;","import VersionsBlock from \"./versions-block\";\r\nexport default VersionsBlock;","import React from \"react\";\r\nimport \"./versions-block.css\";\r\nimport Version from \"../version\";\r\n\r\nconst VersionsBlock = ({ versions, lang }) => {\r\n    const mappedVersions = versions.map((version, idx) => {\r\n      return (\r\n          <Version info={version} opened={idx === 0} key={version.number} { ...{lang} } />\r\n      );\r\n    })\r\n    return (\r\n        <div className=\"VersionsBlock\">\r\n            <div className=\"VersionsBlock-List VersionsList\">\r\n                {mappedVersions}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VersionsBlock;","import VersionHeadingBlock from \"./version-heading-block\";\r\nexport default VersionHeadingBlock;\r\n","import React from \"react\";\r\nimport \"./version-heading-block.css\";\r\n\r\nconst VersionHeadingBlock = ({lang, versionNumber}) => {\r\n    const headingText = lang === \"en\" ? \"New in \" : \"Neu in \";\r\n    const patchNumber = versionNumber !== \"2.09\" ? \".0\" : \".7\";\r\n    console.log(patchNumber);\r\n    return (\r\n        <div className=\"VersionHeadingBlock\">\r\n            <div className=\"VersionHeading\">\r\n                <span className=\"VersionHeading-Text VersionHeading-Text_desktop\">\r\n                    {versionNumber + patchNumber}\r\n                </span>\r\n                <span className=\"VersionHeading-Text VersionHeading-Text_mobile\">\r\n                    {headingText}{versionNumber + patchNumber}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VersionHeadingBlock;","import FeatureDetails from \"./feature-details\";\r\nexport default FeatureDetails;","import React from \"react\";\r\nimport \"./feature-details.css\";\r\n\r\nconst FeatureDetails = (props) => {\r\n    let { title, text, icon, image, reverse, first } = props;\r\n    text = \"No doubt the improvement of our Undo button was the most awaited one. We get it and do our best to bring it to perfection. \\n\\nSo, what is new here this time?\\n\\n{Undo went global! Let’s say you edit one paragraph, go into another and edit something else there. Then you press the ”Undo” button. Changes will be reset to the current paragraph first and if you make Undo again, you will land on the previous paragraph and changes will be also reset there.}\\n\\n{Your Undos are not stopped by weblinks/cross-references anymore. Undo deletes them now as normal content.}\\n\\n{Undo and Redo buttons are now placed on the toolbar. Very convenient!}\";\r\n    const preparedText = text.split(\"\\n\").map((item, key) => { \r\n        if (item[0] === \"{\" && item[item.length - 1] === \"}\") {\r\n            return (\r\n            <div className=\"ListItem\" key={key}>\r\n                <p className=\"ListItem-Icon\">{\"\\u2714\"}</p>\r\n                <p className=\"ListItem-Text\">{item.slice(1, item.length - 1)}</p>\r\n            </div>\r\n            );\r\n        }\r\n        return <span key={key}>{item}<br/></span> \r\n    })\r\n\r\n    let FeatureDetailsClass = \"FeatureDetails\";\r\n    if (reverse) {\r\n        FeatureDetailsClass += \" FeatureDetails_reverse\";\r\n    }\r\n    if (first) {\r\n        FeatureDetailsClass += \" FeatureDetails_first\";\r\n    }\r\n\r\n    return (\r\n        <div className={FeatureDetailsClass}>\r\n            <div className=\"FeatureDetails-LeftSide\">\r\n                <div className=\"FeatureDescription\">\r\n                    <div className=\"FeatureDescription-Heading\">\r\n                        <div className=\"FeatureDescription-Icon\" style={{ backgroundImage : `url(${icon})`}}>\r\n                        </div>\r\n                        <div className=\"FeatureDescription-HeadingTextBox\">\r\n                            <span className=\"FeatureDescription-HeadingText\">\r\n                                {title}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"FeatureDescription-TextBox\">\r\n                        <span className=\"FeatureDescription-Text\">\r\n                            {preparedText}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"FeatureDetails-RightSide\">\r\n                <div className=\"FeatureIllustration\">\r\n                    <img className=\"FeatureIllustration-Image FeatureIllustration-Image_withShadow\" src={image} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeatureDetails;","import FeatureDetailsList from \"./feature-details-list\";\r\nexport default FeatureDetailsList;","import React from \"react\";\r\nimport FeatureDetails from \"../feature-details\";\r\nimport \"./feature-details-list.css\";\r\n\r\nconst FeatureDetailsList = ({features}) => {\r\n    const featureDetailsArray = features.map((feature, idx) => {\r\n        return (\r\n            <FeatureDetails {...feature} key={feature.title + idx} reverse={idx % 2} first={idx === 0} />\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"FeatureDetailsList\">\r\n            {featureDetailsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeatureDetailsList;","import SubcriptionBlock from \"./subscription-block\";\r\nexport default SubcriptionBlock;","import React, { Component } from \"react\";\r\nimport \"./subscription-block.css\";\r\n\r\nclass SubcriptionBlock extends Component {\r\n\r\n    salutations = this.props.lang === \"en\" ? [\"Mr.\", \"Mrs.\", \"Miss\", \"Sir\"] : [\"Herr\", \"Frau\"]; \r\n\r\n    state = {\r\n        salutation: this.salutations[0],\r\n        name: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n    }\r\n\r\n    changeInput = (event, inputName) => {\r\n        this.setState({ [inputName]: event.target.value});\r\n    }\r\n\r\n    switchSalutationInput(previousValue, isForward = true) {\r\n        const { salutations } = this;\r\n        const idx = salutations.indexOf(previousValue);\r\n        if (idx === -1) {\r\n            this.setState({ salutation: salutations[0]})\r\n        } else {\r\n            if (isForward) {\r\n                if (idx + 1 < salutations.length) {\r\n                    this.setState({ salutation: salutations[idx + 1]});\r\n                } else {\r\n                    this.setState({ salutation: salutations[0]});\r\n                }\r\n            } else {\r\n                if (idx - 1 >= 0) {\r\n                    this.setState({ salutation: salutations[idx - 1]});\r\n                } else {\r\n                    this.setState({ salutation: salutations[salutations.length - 1]});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { lang } = this.props;\r\n        let subheadingClass = \"SubscriptionForm-Subheading\";\r\n        let headingClass = \"SubscriptionForm-Heading\";\r\n        let privacyCaptionClass = \"SubscriptionForm-PrivacyCaption\";\r\n        \r\n        if (lang === \"de\") {\r\n            subheadingClass += \" SubscriptionForm-Subheading_de\";\r\n            headingClass += \" SubscriptionForm-Heading_de\";\r\n            privacyCaptionClass += \" SubscriptionForm-PrivacyCaption_de\";\r\n        }\r\n\r\n        let headingText, subheadingText, salutationTitle, nameTitle, surnameTitle, emailTitle, privacyCaptionText, privacyCaptionLinkText, buttonText;\r\n\r\n        if (lang === \"en\") {\r\n            headingText = \"Subscribe to SMASHDOCs\";\r\n            subheadingText = \"Always\\u{00A0}be\\u{00A0}the\\u{00A0}first\\u{00A0}to\\u{00A0}hear\\u{00A0}about\\u{00A0}new features\\u{00A0}in\\u{00A0}SMASHDOCs\"; \r\n            salutationTitle = \"Salutation\"; \r\n            nameTitle = \"Name\"; \r\n            surnameTitle = \"Surname\"; \r\n            emailTitle = \"E-mail address\"; \r\n            privacyCaptionText = \"Your data is safe with us: \"; \r\n            privacyCaptionLinkText = \"Privacy policy\";\r\n            buttonText = \"SUBSCRIBE\";\r\n        } else {\r\n            headingText = \"Abonnieren Sie SMASHDOCs\";\r\n            subheadingText = \"Seien\\u{00A0}Sie\\u{00A0}immer\\u{00A0}der\\u{00A0}Erste,\\u{00A0}der\\u{00A0}von\\u{00A0}neuen Funktionen\\u{00A0}in\\u{00A0}SMASHDOCs\\u{00A0}erfährt\"; \r\n            salutationTitle = \"Anrede\"; \r\n            nameTitle = \"Vorname\"; \r\n            surnameTitle = \"Nachname\"; \r\n            emailTitle = \"E-Mail-Adresse\"; \r\n            privacyCaptionText = \"Ihre Daten sind bei uns sicher: \"; \r\n            privacyCaptionLinkText = \"Datenschutzerklärung\"; \r\n            buttonText = \"ABONNIEREN\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"SubscriptionBlock\">\r\n                <div className=\"SubscriptionForm\">\r\n                    <div className={headingClass}>\r\n                        <span className=\"SubscriptionForm-HeadingText\">\r\n                            {headingText}\r\n                        </span>\r\n                    </div>\r\n                    <div className={subheadingClass}>\r\n                        <span className=\"SubscriptionForm-SubheadingText\">\r\n                            {subheadingText}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"SubscriptionForm-InputList\">\r\n                        <div className=\"SubscriptionInput\">\r\n                            <div className=\"SubscriptionInput-Title\">\r\n                                <span className=\"SubscriptionInput-TitleText\">\r\n                                    {salutationTitle} <span className=\"SubscriptionInput-TitleText_red\">*</span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"SubscriptionInput-InputBox\">\r\n                                <input \r\n                                    className=\"SubscriptionInput-InputField\" \r\n                                    value={this.state.salutation} \r\n                                    onChange={(e) => this.changeInput(e, \"salutation\")}\r\n                                    onFocus={(e) => { if (this.salutations.indexOf(e.target.value) !== -1) { e.target.value=\"\"; }}}\r\n                                    onBlur={(e) => { if (e.target.value === \"\") { e.target.value = this.state.salutation }}}\r\n                                >\r\n                                </input>\r\n                                <div className=\"SubscriptionInput-ArrowBox\">\r\n                                    <div \r\n                                        className=\"SubscriptionInput-Arrow SubscriptionInput-Arrow_up\"\r\n                                        onClick={() => this.switchSalutationInput(this.state.salutation, false)}\r\n                                    >\r\n                                    </div>\r\n                                    <div \r\n                                        className=\"SubscriptionInput-Arrow SubscriptionInput-Arrow_down\"\r\n                                        onClick={() => this.switchSalutationInput(this.state.salutation)}\r\n                                    >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"SubscriptionForm-NameInputs\">\r\n                            <div className=\"SubscriptionInput SubscriptionInput_name\">\r\n                                <div className=\"SubscriptionInput-Title\">\r\n                                    <span className=\"SubscriptionInput-TitleText\">\r\n                                        {nameTitle} <span className=\"SubscriptionInput-TitleText_red\">*</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"SubscriptionInput-InputBox\">\r\n                                    <input \r\n                                        className=\"SubscriptionInput-InputField\"\r\n                                        value={this.state.name} \r\n                                        onChange={(e) => this.changeInput(e, \"name\")}\r\n                                    >\r\n                                    </input>\r\n                                </div>    \r\n                            </div>\r\n                            <div className=\"SubscriptionInput SubscriptionInput_surname\">\r\n                                <div className=\"SubscriptionInput-Title\">\r\n                                    <span className=\"SubscriptionInput-TitleText\">\r\n                                        {surnameTitle} <span className=\"SubscriptionInput-TitleText_red\">*</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"SubscriptionInput-InputBox\">\r\n                                    <input \r\n                                        className=\"SubscriptionInput-InputField\"\r\n                                        value={this.state.surname} \r\n                                        onChange={(e) => this.changeInput(e, \"surname\")}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"SubscriptionInput SubscriptionInput_email\">\r\n                            <div className=\"SubscriptionInput-Title\">\r\n                                <span className=\"SubscriptionInput-TitleText\">\r\n                                    {emailTitle} <span className=\"SubscriptionInput-TitleText_red\">*</span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"SubscriptionInput-InputBox\">\r\n                                <input \r\n                                    className=\"SubscriptionInput-InputField\"\r\n                                    value={this.state.email} \r\n                                    onChange={(e) => this.changeInput(e, \"email\")}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                        </div>\r\n                        <div className={privacyCaptionClass}>\r\n                            <span className=\"SubscriptionForm-PrivacyCaptionText\">\r\n                                {privacyCaptionText}<span className=\"SubscriptionForm-PrivacyCaptionText_link\">{privacyCaptionLinkText}</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"SubscriptionForm-Button\">\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SubcriptionBlock;","import VersionPage from \"./version-page\";\r\nexport default VersionPage;","import React, { Component } from \"react\";\r\nimport VersionInfoService from \"../../services/version-info-service\";\r\nimport VersionHeadingBlock from \"../version-heading-block\";\r\nimport FeatureDetailsList from \"../feature-details-list\";\r\nimport SubscriptionBlock from \"../subscription-block\";\r\nimport \"./version-page.css\";\r\n\r\nclass VersionPage extends Component {\r\n    infoService = new VersionInfoService();\r\n    \r\n    state = {\r\n        features: null\r\n    };\r\n\r\n    infoService = new VersionInfoService();\r\n\r\n    componentDidMount() {\r\n      this.updateVersionData();\r\n    }\r\n\r\n    componentDidUpdate({ versionNumber }) {\r\n      if (versionNumber !== this.props.versionNumber) {\r\n        this.updateVersionData();\r\n      }\r\n    }\r\n  \r\n    onVersionDataLoaded = versionData => {\r\n      this.setState({ features: versionData });\r\n    }\r\n  \r\n    updateVersionData = () => {\r\n      const { lang, versionNumber } = this.props;\r\n      this.infoService.getVersionDetails(lang, versionNumber).then(versionData => {\r\n        this.onVersionDataLoaded(versionData);\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const { lang, versionNumber } = this.props;\r\n        const { features } = this.state;\r\n\r\n        if (features) {\r\n            return (\r\n                <div className=\"VersionPage\">\r\n                    <VersionHeadingBlock { ...{lang, versionNumber} }/>\r\n                    <FeatureDetailsList { ...{features} }/>\r\n                    <SubscriptionBlock { ...{lang} }/>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"VersionPage\">\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VersionPage;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { isValidId,  replaceLangLinks } from \"./helpers\";\nimport VersionInfoService from \"./services/version-info-service\";\nimport TitleBlock from \"./components/title-block\";\nimport PresentationBlock from \"./components/presentation-block/presentation-block\";\nimport VersionsBlock from \"./components/versions-block\";\nimport VersionPage from \"./components/version-page\";\n\nclass App extends Component {\n  infoService = new VersionInfoService();\n  \n  state = {\n    lang: this.props.lang,\n    versions: null,\n    currentVersion: null,\n  }\n\n  componentDidMount() {\n    this.updateVersions();\n  }\n\n  onVersionsLoaded = versions => {\n    this.setState({ versions });\n  }\n\n  updateVersions = () => {\n    this.infoService.getAllVersions(this.state.lang).then(versions => {\n      this.onVersionsLoaded(versions);\n    });\n  }\n\n  render() {\n    const { lang, versions } = this.state;\n    if (versions) {\n      const { number, title, innovation } = versions[0];\n      const { changeLang, scrollTo } = window;\n\n      return (\n        <div className=\"App\">\n          <Router>\n            <Route path=\"/\" exact\n              render={({history}) => {\n                history.push(`/en`);\n                scrollTo(0, 0);\n\n                  return (\n                    <div>\n                      <TitleBlock { ...{lang} } />\n                      <PresentationBlock { ...{lang, number, title, innovation} } />\n                      <VersionsBlock { ...{lang, versions} } />\n                    </div>\n                  );\n                }} />\n\n            <Route path={`/${lang}`} exact\n              render={() => {\n                 changeLang(lang);\n                 scrollTo(0, 0);\n\n                 return (\n                   <div>\n                     <TitleBlock { ...{lang} } />\n                     <PresentationBlock { ...{lang, number, title, innovation} } />\n                     <VersionsBlock { ...{lang, versions} } />\n                   </div>\n                 );\n               }} />\n\n            <Route path={`/${lang}/:id`} \n              render={({match, history}) => {\n               changeLang(lang);\n               const { id } = match.params;\n               scrollTo(0, 0);\n\n               if (isValidId(versions, id)) {\n                 replaceLangLinks(id);\n\n                 return (\n                   <div>\n                     <VersionPage { ...{lang} } versionNumber={`${id.replace(\"-\", \".\")}`} />\n                   </div>\n                 );\n                 \n               } else {\n                 history.push(`/${lang}`);\n\n                 return (\n                   <div>\n                     <TitleBlock { ...{lang} } />\n                     <PresentationBlock { ...{lang, number, title, innovation} } />\n                     <VersionsBlock { ...{lang, versions} } />\n                   </div>\n                 );\n               }                      \n              }} />\n            \n          </Router>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n      </div>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App lang=\"en\" />, document.getElementById('root_en'));\nReactDOM.render(<App lang=\"de\" />, document.getElementById('root_de'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}